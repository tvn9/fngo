// Example to demonstrate immunity functions
package main

import (
	"errors"
	"fmt"
	"strings"
)

type CreditError error

type PaymentFunc func(CreditCard, int) (CreditCard, CreditError)

func NewCreditCard(initialCredit int) CreditCard {
	return CreditCard{credit: initialCredit}
}

func NewItem(sku ItemSku) Item {
	if len(sku) > 0 {
		return Item{Sku: sku}

	}
	return Item{}
}

// AddItemDetails edits item's name, price, and quantiry
func AddItemDetails(i Item, s ItemSku, n ItemName, p ItemPrice) Item {
	if i.Sku == s {
		i.Name = n
		i.Price = p
	}
	return i
}

// UpdateItemName item name
func UpdateItemName(i Item, s ItemSku, n ItemName) Item {
	if i.Sku == s {
		i.Name = n
	}
	return i
}

// ActivateItem change item's state to active
func ActivateItem(i Item, s ItemSku) Item {
	if i.Sku == s {
		i.Active = true
	}
	return i
}

// DeactivateItem change item's state to inactive
func DeactivateItem(i Item, s ItemSku) Item {
	if i.Sku == s {
		i.Active = false
	}
	return i
}

// PrintItemInfo prints the Item on the screen
func PrintItemInfo(i Item) {
	fmt.Printf("Item info: %v\n", i)
}

var (
	NOT_ENOUGH_CREDIT CreditError = CreditError(errors.New("not enough credit"))
)

func Charge(c CreditCard, amount int) (CreditCard, CreditError) {
	if amount <= c.credit {
		c.credit -= amount
		return c, nil
	}
	return c, NOT_ENOUGH_CREDIT
}

/*
func OrderItem(c CreditCard, pay PaymentFunc) (Item, func() (CreditCard, error)) {
	// item := NewItem()
	chargeFunc := func() (CreditCard, error) {
		return pay(c, )
	}
	return hotdog, chargeFunc
}
*/

func main() {
	sku := strings.ToUpper("tn0001")
	// Create a new Sku
	tn0001 := NewItem(ItemSku(sku))
	PrintItemInfo(tn0001)

	tn0001 = ActivateItem(tn0001, ItemSku(sku))
	PrintItemInfo(tn0001)

	// Add item name, price, and quantity
	tn0001 = AddItemDetails(tn0001, ItemSku(sku), ItemName("HotDog001"), ItemPrice(20))
	PrintItemInfo(tn0001)

	/*
		myCard := NewCreditCard(2000)
		hotdog, creditFunc := OrderHotdog(myCard, Charge)
		fmt.Printf("%v\n", hotdog)
		newCard, err := creditFunc()
		if err != nil {
			log.Fatal("User has not credit")
		}
		myCard = newCard
		fmt.Printf("Oreginal Credit Balance: %d\n", myCard)
		fmt.Printf("%v\n", myCard)
	*/
}
